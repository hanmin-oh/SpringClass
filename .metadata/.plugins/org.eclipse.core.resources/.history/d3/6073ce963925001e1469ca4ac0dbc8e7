package com.tjoeun.spring_Envrioment;

import java.io.IOException;

import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.support.GenericXmlApplicationContext;
import org.springframework.core.env.ConfigurableEnvironment;
import org.springframework.core.env.MutablePropertySources;
import org.springframework.core.io.support.ResourcePropertySource;

public class MainClass {
	
	public static void main(String[] args) {
		
		// ConfigurableApplicationContext 인터페이스 타입으로 환경 설정 정보를 읽어올 객체(컨테이너)를 만든다.
		ConfigurableApplicationContext ctx = new GenericXmlApplicationContext("classpath:applicationCTX.xml");
		// ConfigurableEnvironment 인터페이스 타입의 객체에서 DI 컨테이너 환경 설정 정보를 getEnvironment() 메소드로
		// 얻어와서 ConfigurableEnvironment 인터페이스 객체에 저장한다. 
		ConfigurableEnvironment env = ctx.getEnvironment();
		// properties 정보를 저장하는 MutablePropertySources 클래스 타입의 객체에 ConfigurableEnvironment 인터페이스 타입의
		// 객체에서 ConfigurableEnvironment() 메소드로 properties 정보만 얻어와 저장한다. 
		MutablePropertySources mutablePropertySources = env.getPropertySources();
		
		try {
			// DI 컨테이너에서 얻어온 properties 정보가 저장되는 MutablePropertySources 클래스 객체 mutablePropertySources에 
			// addLast() 메소드를 사용해서 맨 마지막 위치에 admin.properties 파일의 properties 내용을 읽어 추가한다.
			mutablePropertySources.addLast(new ResourcePropertySource("classpath:admin.properties"));
			
			System.out.println("admin.id: " + env.getProperty("admin.id"));
		} catch (IOException e) {
			System.out.println("admin.properties 파일을 읽어올 수 없습니다.");
			//e.printStackTrace();
		}
		
		
		
		
	}

}
