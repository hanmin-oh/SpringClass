package com.tjoeun.springLifeCycle;

import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.GenericXmlApplicationContext;


public class MainClass {
	
	public static void main(String[] args) {
		
		/*
		 * afterPropertiesSet() 메소드는 실행되지만 destory() 메소드가 실행되지 않는다.
		 * AbstractApplicationContext ctx = new
		 * GenericXmlApplicationContext("classpath:applicationCTX.xml");
		 * 
		 * Person person = ctx.getBean("person", Person.class);
		 * System.out.println(person);
		 * 
		 * 
		 * Person person2 = ctx.getBean("person2", Person.class);
		 * System.out.println(person2);
		 */
		
		
		// DI 컨테이너를 만든다. => 빈 컨테이너 = 필요할 때 bean 설정 정보를 채워서 사용한다.
		// GenericXmlApplicationContext 클래스 생성자로 bean 설정 정보를 넘기지 않고 만든 DI 컨테이너는
		// 빈 컨테이너만 생성되고 bean 설정 정보는 들어있지 않다.
		GenericXmlApplicationContext ctx = new GenericXmlApplicationContext();
		
		// load() 메소드로 xml 파일에서 정의한 bean 설정 정보를 DI 컨테이너에 넣어준다.
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}

}
























